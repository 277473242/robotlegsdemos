<?xml version="1.0" encoding="UTF-8"?>
<website>
	<markers>
		<marker headline="In de Wildeman, a famous beerpub" foto="wild.jpg" body="Situated in a former Amsterdam distillery, In de Wildeman offers an ideal opportunity to enjoy your beer in an authentic environment." lat="52.3761799" lng="4.8952004" stad="Amsterdam" adres="Kolksteeg 3"/>
		<marker headline="Café Jos Meesterschenkerij" foto="jos.jpg" body="This pub is the 2009 number 1 pub in The Netherlands according to the official pub top 100! Be sure to visit this one." lat="51.8359761" lng="5.8781757" stad="Nijmegen" adres="Daalseweg 309"/>
	</markers>
	<contents>
		<content type="hoe"><![CDATA[<span class='quote'><font size='21px' color='#b30d0d'>So, let's try and explain how everything works here.</font></span><br/><br/><font size='15px'>This is an explanation on how this specific demo works, not an explanation on how RobotLegs works. Shaun did that on github.<br/><br/><span class='mbold'>First things first.</span><br/>The project is a FlashBuilder AS3-project using SDK4.0.0 build 7219. It is set to build in /web/assets/swf/ and opens the index.html in /web if you debug the project. The index.html embeds a loader.swf and it loads the swf we compile with FlashBuilder. The View (component) classes in the code embed graphical assets (movieclips) from fla files (Flash CS4). These are set to publish in src/main/flash/assets/swf/. If you change things in the fla's, compile in the Flash IDE and debug the project in FlashBuilder to see the changes. The Googlemap uses a custom marker. Its View class embeds a .png that resides in src/main/flash/assets/bitmaps. One thing to mention: I used the word component. No, I don't mean a full fledged AS3 Component. In the context of the framework we merely use the word component to make a distinction between the Mediator and the view component it mediates.<br/><br/>The basic idea is to show how the framework is used to consume content like xml and a service. And (of course) how to set and change the state using events. On the Googlemap I show some pubs in our country with corresponding entries under the 'Tips' tab in the main navigation. Clicking on one of the markers triggers an event in the View component and its Mediator handles the event by calling the (Googlemaps API) service. The Mediator receives the result from the service and changes the state of the View component via its API. To demonstrate how to 'communicate' between the main content pane and the Googlemap (these two 'components' are obviously unaware of each others existence) the tips will 'trigger' an event and cause the Googlemap to change its state.<br/><br/>Within the main content pane the main navigation is a seperate component. It merely triggers an event when one of the tabs is clicked. The event carries an id and the Mediator that 'governs' the content view component uses this id to show the correct content from the xml.<br/><br/>Ok, that pretty much wraps it up. Last thing to mention: this is a work in process so I'll probably refactor some things, so check back if you want to have the latest version. And now:</font><br/><br/><span class='link'><a href='event:showTips'>Show me the best pubs >></a></span>]]></content>
		<content type="tips">
			<tip text="Tip 1. Amsterdam - In de Wildeman, a famous pub with a nice collection of Belgian beers"/>
			<tip text="Tip 2. Nijmegen - Café Jos. This pub is the number 1 pub on the hotlist!"/>
		</content>
		<content type="regels"><![CDATA[<font color='#b30d0d' size='21'>And my explanation will probably continue here.</font><br>Don't know yet what I'm going to tell you here but I'll figure it out.]]></content>
		<content type="voorwaarden"><![CDATA[<font color='#b30d0d' size='21'>And some more room for explanations.</font><br>
Well, it's probably some work to explain the whole thing so I will be typing something here too I guess...]]></content>
	</contents>
</website>
